/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CampaignsListRelationFilter } from "../../campaigns/base/CampaignsListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { CharactersListRelationFilter } from "../../characters/base/CharactersListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { MapsListRelationFilter } from "../../maps/base/MapsListRelationFilter";
import { SessionsListRelationFilter } from "../../sessions/base/SessionsListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => CampaignsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CampaignsListRelationFilter)
  @IsOptional()
  @Field(() => CampaignsListRelationFilter, {
    nullable: true,
  })
  campaignsItems?: CampaignsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CharactersListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CharactersListRelationFilter)
  @IsOptional()
  @Field(() => CharactersListRelationFilter, {
    nullable: true,
  })
  charactersItems?: CharactersListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => MapsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MapsListRelationFilter)
  @IsOptional()
  @Field(() => MapsListRelationFilter, {
    nullable: true,
  })
  mapsItems?: MapsListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  role?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => SessionsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SessionsListRelationFilter)
  @IsOptional()
  @Field(() => SessionsListRelationFilter, {
    nullable: true,
  })
  sessionsItems?: SessionsListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}

export { UserWhereInput as UserWhereInput };
